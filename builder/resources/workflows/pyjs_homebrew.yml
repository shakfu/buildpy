name: pyjs-homebrew

on:
  workflow_dispatch:
    inputs:
      variant:
        type: choice
        description: Please select a homebrew build variant
        default: homebrew-ext
        required: true
        options: 
          - homebrew-ext
          - homebrew-pkg
      os:
        type: choice
        description: Please select a macos version
        default: macos-10.15
        required: true
        options: 
          - macos-10.15
          - macos-11

env:
  arch: darwin-x86

jobs:
  build:
    runs-on: ${{ github.event.inputs.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        fetch-depth: '0'

    - run: python3 source/py/scripts/set_py_ver.py
    - run: echo ${{ env.PY_VERSION }}

    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7

    - name: Build externals
      run: make ${{ github.event.inputs.variant }}

    - name: Package externals
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_SHA: ${{ github.sha }}
      run: |
        PACKAGE_NAME=`echo $GITHUB_REPOSITORY | sed 's/.*\///g'`
        PACKAGE_REV=`echo $GITHUB_SHA | sed -e 's/^[[:alnum:]]\{7\}/&-/g' | sed 's/-.*//'`
        mkdir -p $PACKAGE_NAME
        if [ -e package-info.json ]; then cp package-info.json $PACKAGE_NAME; fi
        if [ -e package-info.json.in ]; then cp package-info.json.in $PACKAGE_NAME; fi
        for f in *.md; do [ -e "$f" ] && cp "$f" $PACKAGE_NAME ; done
        if [ -e icon.png ]; then cp icon.png $PACKAGE_NAME; fi
        if [ -d docs ]; then cp -r docs $PACKAGE_NAME; fi
        if [ -d examples ]; then cp -r examples $PACKAGE_NAME; fi
        if [ -d externals ]; then cp -af externals $PACKAGE_NAME; fi
        if [ -d extras ]; then cp -r extras $PACKAGE_NAME; fi
        if [ -d help ]; then cp -r help $PACKAGE_NAME; fi
        if [ -d init ]; then cp -r init $PACKAGE_NAME; fi
        if [ -d javascript ]; then cp -r init $PACKAGE_NAME; fi
        if [ -d jsextensions ]; then cp -r jsextensions $PACKAGE_NAME; fi
        if [ -d patchers ]; then cp -r patchers $PACKAGE_NAME; fi
        if [ -d support ]; then cp -af support $PACKAGE_NAME; fi
        ditto -V -ck --keepParent $PACKAGE_NAME ${PACKAGE_NAME}.zip
        rm -rf $PACKAGE_NAME && mkdir -p $PACKAGE_NAME
        mv ${PACKAGE_NAME}.zip $PACKAGE_NAME/

    - uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-${{ github.event.inputs.variant }}-${{ env.PY_VERSION }}-${{ steps.short-sha.outputs.sha }}
        path: ${{ github.event.repository.name }}

